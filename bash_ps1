# Prompt will appear like so:

# user@host ---------------------------------------------------------- hh:mm:ss
# dir $ 

# If user is the omniscient superuser of justice, user will be shown in red.
# If load average goes above $HIGH_LOAD, hostname will be shown in red.

# If HOST and HIGH_LOAD are not set, set them now
if [[ -z "$HOST" ]]; then
    HOST=`hostname -s`
fi
if [[ -z "$HIGH_LOAD" ]]; then
    HIGH_LOAD=1
fi

# Default fill; will be recalculated in prompt_command below
fill=" --- "

# Default prompt variable; will be recalculated in prompt_command below
user_host="$USER@$HOST "
PS1="$status_style$user_host"'$fill \t\n'"$prompt_style\W \$ $command_style"

# Font colors+styles
reset_style='\[\033[00m\]'
status_style=$reset_style'\[\033[0;90m\]' # gray
prompt_style=$reset_style
command_style=$reset_style'\[\033[1;37m\]' # bold white
warning_style=$reset_style'\[\033[0;31m\]' # red

# Reset color after command is submitted, but before command output
trap 'printf "\e[0m"' DEBUG

function prompt_command {
    # Default styles for normal conditions
    user_style=$status_style
    host_style=$status_style
    
    # If user is root, display username in red
    if [[ $UID -eq 0 ]]; then
        user_style=$warning_style
    fi
    
    # If load is high, display hostname in red
    load=`uptime | awk '{print $10}' | cut -f1 -d.`
    if [[ $load -ge $HIGH_LOAD ]]; then
        host_style=$warning_style
    fi
    
    # Set user@host string, with and without styles
    user_host="$USER@$HOST "
    user_host_styled="$user_style$USER$status_style@$host_style$HOST$status_style "

    # Create a string of dashes the length of the terminal window 
    # minus the length of the user+host and time
    let fillsize=${COLUMNS}-${#user_host}-9
    fill=""
    for (( n=0; n<fillsize; n++ ));
    do
        fill="-${fill}"
    done
    
    # Finally, set PS1
    PS1="$user_host_styled"'$fill \t\n'"$prompt_style\W \$ $command_style"
}
PROMPT_COMMAND=prompt_command
